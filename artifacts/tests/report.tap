TAP version 13
ok 1 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Single type equivalence" (0, Eloquent\Typhax\Type\StringType, Eloquent\Typhax\Type\StringType)
ok 2 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Single type non-equivalence" (-1, Eloquent\Typhax\Type\StringType, Eloquent\Typhax\Type\StringableType)
ok 3 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order with duplicates AND equivalence" (0, Eloquent\Typhax\Type\AndType, Eloquent\Typhax\Type\AndType)
ok 4 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order AND non-equivalence 1" (-1, Eloquent\Typhax\Type\AndType, Eloquent\Typhax\Type\AndType)
ok 5 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order AND non-equivalence 2" (-1, Eloquent\Typhax\Type\AndType, Eloquent\Typhax\Type\AndType)
ok 6 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order AND non-equivalence 3" (1, Eloquent\Typhax\Type\AndType, Eloquent\Typhax\Type\AndType)
ok 7 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order with duplicates OR equivalence" (0, Eloquent\Typhax\Type\OrType, Eloquent\Typhax\Type\OrType)
ok 8 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable equivalence" (0, Eloquent\Typhax\Type\TraversableType, Eloquent\Typhax\Type\TraversableType)
ok 9 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable primary non equivalence" (-1, Eloquent\Typhax\Type\TraversableType, Eloquent\Typhax\Type\TraversableType)
ok 10 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable key non equivalence" (1, Eloquent\Typhax\Type\TraversableType, Eloquent\Typhax\Type\TraversableType)
ok 11 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable value non equivalence" (1, Eloquent\Typhax\Type\TraversableType, Eloquent\Typhax\Type\TraversableType)
ok 12 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable and non-traversable non equivalence" (-1, Eloquent\Typhax\Type\StringType, Eloquent\Typhax\Type\TraversableType)
ok 13 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Tuple equivalence" (0, Eloquent\Typhax\Type\TupleType, Eloquent\Typhax\Type\TupleType)
ok 14 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Tuple non equivalence" (1, Eloquent\Typhax\Type\TupleType, Eloquent\Typhax\Type\TupleType)
ok 15 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Tuple and non-tuple non equivalence" (-1, Eloquent\Typhax\Type\StringType, Eloquent\Typhax\Type\TupleType)
ok 16 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Composite and non-composite non equivalence" (1, Eloquent\Typhax\Type\StringType, Eloquent\Typhax\Type\OrType)
ok 17 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Stream type readable non-equivalence" (1, Eloquent\Typhax\Type\StreamType, Eloquent\Typhax\Type\StreamType)
ok 18 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Stream type writable non-equivalence" (1, Eloquent\Typhax\Type\StreamType, Eloquent\Typhax\Type\StreamType)
ok 19 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Attribute null and non-null non-equivalence 1" (1, Eloquent\Typhax\Type\StreamType, Eloquent\Typhax\Type\StreamType)
ok 20 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Attribute null and non-null non-equivalence 2" (-1, Eloquent\Typhax\Type\StreamType, Eloquent\Typhax\Type\StreamType)
ok 21 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type equivalence" (0, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 22 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (different type)" (1, Eloquent\Typhax\Type\StreamType, Eloquent\Typhax\Type\ExtensionType)
ok 23 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (different class name)" (-1, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 24 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (different types)" (-1, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 25 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (< attribute values)" (-1, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 26 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (> attribute values)" (1, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 27 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (< attribute keys)" (-1, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 28 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (> attribute keys)" (1, Eloquent\Typhax\Type\ExtensionType, Eloquent\Typhax\Type\ExtensionType)
ok 29 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testSort
ok 30 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #0 ('array')
ok 31 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #1 ('boolean')
ok 32 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #2 ('callable')
ok 33 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #3 ('float')
ok 34 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #4 ('integer')
ok 35 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #5 ('mixed')
ok 36 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #6 ('object')
ok 37 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #7 ('resource')
ok 38 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #8 ('stream')
ok 39 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #9 ('string')
ok 40 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #10 ('stringable')
ok 41 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #11 ('tuple')
ok 42 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #12 ('bool')
ok 43 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #13 ('callback')
ok 44 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #14 ('double')
ok 45 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #15 ('int')
ok 46 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #16 ('long')
ok 47 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #17 ('number')
ok 48 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #18 ('numeric')
ok 49 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #19 ('real')
ok 50 - Eloquent\Typhax\Lexer\LexerTest::testIntrinsicTypesNames with data set #20 ('scalar')
ok 51 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #0 (array(type), 'type')
ok 52 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #1 (array(type, <, subType, >), 'type<subType>')
ok 53 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #2 (array(type, <, subType, ,,  , subType, ,,  , subType, >), 'type<subType, subType, subType>')
ok 54 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #3 (array(type, |, type), 'type|type')
ok 55 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #4 (array(type, +, type), 'type+type')
ok 56 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #5 (array(type-type), 'type-type')
ok 57 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #6 (array(type, {, foo, :,  , bar, ,,  , 'baz', :,  , "qux", }), 'type{foo: bar, \'baz\': "qux"}')
ok 58 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #7 (array(type, {, foo, :,  , [, bar, ,,  , baz, ], ,,  , qux, :,  , {, doom, :,  , splat, ,,  , pip, :,  , pop, }, }), 'type{foo: [bar, baz], qux: {doom: splat, pip: pop}}')
ok 59 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #8 (array([, foo, ,,  , [, bar, ,,  , baz, ], ]), '[foo, [bar, baz]]')
ok 60 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #9 (array({, foo, :,  , bar, ,,  , {, bar, :,  , baz, ,,  , qux, :,  , doom, }, }), '{foo: bar, {bar: baz, qux: doom}}')
ok 61 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #10 (array(1, ,,  , 1.0), '1, 1.0')
ok 62 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #11 (array(true, ,,  , TRUE, ,,  , True, ,,  , false, ,,  , null), 'true, TRUE, True, false, null')
ok 63 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #12 (array(+, =,  , +, +,  , |, |,  , ?, >,  , %, >,  , {, $,  , $, {,  , =, >,  , >, =,  , <, >,  , <, =,  , -, >,  , <, ?php,  , <, ?,  , <, %,  , <, ?=,  , <, %=,  , |, =,  , :, :,  , <, <,  , <, <, =,  , >, >,  , >, >, =,  , <, <, <), '+= ++ || ?> %> {$ ${ => >= <> <= -> <?php <? <% <?= <%= |= :: << <<= >> >>= <<<')
ok 64 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #13 (array("foo $bar $baz[0] $qux->doom {$great} ${great} {$square->width} {$arr['key']} {$arr[4][3]} {$arr['foo'][3]} {$obj->values[3]->name} {${$name}} {${getName()}} {${$object->getName()}} \\\""), '"foo $bar $baz[0] $qux->doom {$great} ${great} {$square->width} {$arr[\'key\']} {$arr[4][3]} {$arr[\'foo\'][3]} {$obj->values[3]->name} {${$name}} {${getName()}} {${$object->getName()}} \\\\\\""')
ok 65 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #14 (array(type, <, subType, ,,  , subType, <, subSubType, ,,  , subSubType, >, >), 'type<subType, subType<subSubType, subSubType>>')
ok 66 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #15 (array(type, <, subType, ,,  , subType, >, {, foo, :,  , bar, }), 'type<subType, subType>{foo: bar}')
ok 67 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #16 (array(Foo\Bar\Baz), 'Foo\\Bar\\Baz')
ok 68 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #17 (array(:, Foo), ':Foo')
ok 69 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #18 (array(:, Foo\Bar\Baz), ':Foo\\Bar\\Baz')
ok 70 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #19 (array(:, Foo\Bar\Baz, {, foo, :,  , bar, }), ':Foo\\Bar\\Baz{foo: bar}')
ok 71 - Eloquent\Typhax\Lexer\LexerTest::testTokens with data set #20 (array(:, Foo\Bar\Baz, <, subType, ,,  , subType, >, {, foo, :,  , bar, }), ':Foo\\Bar\\Baz<subType, subType>{foo: bar}')
ok 72 - Eloquent\Typhax\Lexer\TokenTest::testFromToken with data set #0 (foo, array(307, 'foo', 0))
ok 73 - Eloquent\Typhax\Lexer\TokenTest::testFromToken with data set #1 (bar, array(307, 'bar', 666))
ok 74 - Eloquent\Typhax\Lexer\TokenTest::testFromToken with data set #2 (+, '+')
ok 75 - Eloquent\Typhax\Lexer\TokenTest::testFromToken with data set #3 (|, '|')
ok 76 - Eloquent\Typhax\Lexer\TokenTest::testToken
ok 77 - Eloquent\Typhax\Lexer\TokenTest::testAppend
ok 78 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #0 ('BOOLEAN_FALSE', 'false')
ok 79 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #1 ('BOOLEAN_TRUE', 'true')
ok 80 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #2 ('BRACE_CLOSE', '}')
ok 81 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #3 ('BRACE_OPEN', '{')
ok 82 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #4 ('COLON', ':')
ok 83 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #5 ('COMMA', ',')
ok 84 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #6 ('FLOAT', 306)
ok 85 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #7 ('GREATER_THAN', '>')
ok 86 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #8 ('INTEGER', 305)
ok 87 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #9 ('LESS_THAN', '<')
ok 88 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #10 ('NULL', 'null')
ok 89 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #11 ('PIPE', '|')
ok 90 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #12 ('PLUS', '+')
ok 91 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #13 ('SQUARE_BRACKET_CLOSE', ']')
ok 92 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #14 ('SQUARE_BRACKET_OPEN', '[')
ok 93 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #15 ('STRING', 307)
ok 94 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #16 ('STRING_QUOTED', 315)
ok 95 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #17 ('TYPE_NAME', 'typeName')
ok 96 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #18 ('WHITESPACE', 375)
ok 97 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #19 (NULL, 334)
ok 98 - Eloquent\Typhax\Lexer\TokenTest::testNameAndSupported with data set #20 (NULL, '-')
ok 99 - Eloquent\Typhax\Lexer\TokenTest::testTypesToNames
ok 100 - Eloquent\Typhax\Parser\Exception\ParseExceptionTest::testException
ok 101 - Eloquent\Typhax\Parser\Exception\UnexpectedTokenTest::testException
ok 102 - Eloquent\Typhax\Parser\Exception\UnsupportedAttributeExceptionTest::testException
ok 103 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Basic example" (Eloquent\Typhax\Type\ObjectType, 6, ' foo ')
ok 104 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Simple traversable 1" (Eloquent\Typhax\Type\TraversableType, 14, ' foo < bar > ')
ok 105 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Simple traversable 2" (Eloquent\Typhax\Type\TraversableType, 20, ' foo < bar , baz > ')
ok 106 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Nested subtypes" (Eloquent\Typhax\Type\TraversableType, 35, ' foo < bar , baz < qux , doom > > ')
ok 107 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Basic composite OR" (Eloquent\Typhax\Type\OrType, 12, ' foo | bar ')
ok 108 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Basic composite AND" (Eloquent\Typhax\Type\AndType, 12, ' foo + bar ')
ok 109 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Chained composite AND" (Eloquent\Typhax\Type\AndType, 18, ' foo + bar + baz ')
ok 110 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Composite precedence" (Eloquent\Typhax\Type\OrType, 18, ' foo | bar + baz ')
ok 111 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Composite types nested inside traversable" (Eloquent\Typhax\Type\TraversableType, 33, ' foo < bar | baz , qux | doom > ')
ok 112 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Composite types nested inside tuple" (Eloquent\Typhax\Type\TupleType, 35, ' tuple < bar | baz , qux | doom > ')
ok 113 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Traversable type nested inside composite" (Eloquent\Typhax\Type\OrType, 25, ' foo | bar < baz , qux > ')
ok 114 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Instrinsic types" (Eloquent\Typhax\Type\OrType, 95, ' boolean | callable | float | integer | null | numeric | object | string | stringable | mixed ')
ok 115 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Intrinsic aliases" (Eloquent\Typhax\Type\OrType, 65, ' bool | callback | double | int | long | number | real | scalar ')
ok 116 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Array" (Eloquent\Typhax\Type\TraversableType, 8, ' array ')
ok 117 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Tuple type" (Eloquent\Typhax\Type\TupleType, 28, ' tuple < foo , bar , baz > ')
ok 118 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Resource type" (Eloquent\Typhax\Type\ResourceType, 11, ' resource ')
ok 119 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Resource type with ofType attribute" (Eloquent\Typhax\Type\ResourceType, 28, ' resource { ofType : foo } ')
ok 120 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Resource type with ofType attribute of reserved type name" (Eloquent\Typhax\Type\ResourceType, 31, ' resource { ofType : stream } ')
ok 121 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Stream type" (Eloquent\Typhax\Type\StreamType, 9, ' stream ')
ok 122 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Stream type with attributes" (Eloquent\Typhax\Type\StreamType, 45, ' stream { readable: true, writable: false } ')
ok 123 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Stream type with only writable attribute" (Eloquent\Typhax\Type\StreamType, 28, ' stream { writable: true } ')
ok 124 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Don't parse past end of type" (Eloquent\Typhax\Type\ObjectType, 6, ' foo bar ')
ok 125 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Parse extension type" (Eloquent\Typhax\Type\ExtensionType, 12, ' : Foo\\Bar ')
ok 126 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Parse extension type with attributes" (Eloquent\Typhax\Type\ExtensionType, 25, ' : Foo\\Bar { foo: bar } ')
ok 127 - Eloquent\Typhax\Parser\ParserTest::testParser with data set "Parse extension type with sub types" (Eloquent\Typhax\Type\ExtensionType, 37, ' : Foo\\Bar < integer > { foo: bar } ')
ok 128 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #0 ('Eloquent\\Typhax\\Parser\\Exception\\UnexpectedTokenException', 'Unexpected END at position 0. Expected one of STRING, TYPE_NAME, NULL, COLON.', '')
ok 129 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #1 ('Eloquent\\Typhax\\Parser\\Exception\\UnexpectedTokenException', 'Unexpected END at position 2. Expected one of STRING, TYPE_NAME, NULL, COLON.', ' ')
ok 130 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #2 ('Eloquent\\Typhax\\Parser\\Exception\\UnexpectedTokenException', 'Unexpected GREATER_THAN at position 8. Expected one of STRING, TYPE_NAME, NULL, COLON.', ' foo < > ')
ok 131 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #3 ('Eloquent\\Typhax\\Parser\\Exception\\UnexpectedTokenException', 'Unexpected BRACE_CLOSE at position 13. Expected one of STRING, STRING_QUOTED, TYPE_NAME, INTEGER, FLOAT, NULL, BOOLEAN_TRUE, BOOLEAN_FALSE, BRACE_OPEN, SQUARE_BRACKET_OPEN.', ' resource { } ')
ok 132 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #4 ('Eloquent\\Typhax\\Parser\\Exception\\UnsupportedAttributeException', 'Unsupported attribute at position 13. Type \'resource\' does not support attribute \'foo\'.', ' resource { foo : bar } ')
ok 133 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #5 ('Eloquent\\Typhax\\Parser\\Exception\\UnsupportedAttributeException', 'Unsupported attribute at position 13. Type \'resource\' does not support attribute \'foobar\'.', ' resource { foobar : baz } ')
ok 134 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #6 ('Eloquent\\Typhax\\Parser\\Exception\\UnexpectedTokenException', 'Unexpected LESS_THAN at position 9. Expected one of BRACE_OPEN, PLUS, PIPE.', ' string < foo > ')
ok 135 - Eloquent\Typhax\Parser\ParserTest::testParserFailure with data set #7 ('Eloquent\\Typhax\\Parser\\Exception\\UnexpectedTokenException', 'Unexpected COMMA at position 18. Expected GREATER_THAN.', ' foo < bar , baz , qux , doom , splat > ')
ok 136 - Eloquent\Typhax\Parser\ParserTest::testParseHash with data set #0 (array('bar', 666, 0.666, NULL, true, false), ' { foo : "bar" , \'baz\' : 666 , qux : .666 , doom : null , splat : true , pop : false } ')
ok 137 - Eloquent\Typhax\Parser\ParserTest::testParseHash with data set #1 (array(array('baz'), array('doom', array('splat', 'pop'))), ' { foo : { bar : baz } , qux : [ doom, [ splat , pop ] ] } ')
ok 138 - Eloquent\Typhax\Parser\ParserTest::testParseHash with data set #2 (array(array(), array()), ' { foo : { } , bar : [ ] } ')
ok 139 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Basic types in an OR" ('array|boolean|callable|float|integer|mixed|null|numeric|object|resource|stream|string|stringable', Eloquent\Typhax\Type\OrType)
ok 140 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Objects ofType in an AND" ('Foo+Bar+Baz', Eloquent\Typhax\Type\AndType)
ok 141 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Traversable type" ('array<integer, string>', Eloquent\Typhax\Type\TraversableType)
ok 142 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Traversable type with mixed key" ('array<string>', Eloquent\Typhax\Type\TraversableType)
ok 143 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Array type with mixed key and value" ('array', Eloquent\Typhax\Type\TraversableType)
ok 144 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Traversable object type with mixed key and value" ('Foo<mixed>', Eloquent\Typhax\Type\TraversableType)
ok 145 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Traversable mixed type with mixed key and value" ('mixed<mixed>', Eloquent\Typhax\Type\TraversableType)
ok 146 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Tuple type" ('tuple<boolean, callable, float>', Eloquent\Typhax\Type\TupleType)
ok 147 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Resource ofType" ('resource {ofType: \'foo\'}', Eloquent\Typhax\Type\ResourceType)
ok 148 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Readable stream" ('stream {readable: true}', Eloquent\Typhax\Type\StreamType)
ok 149 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Non-readable stream" ('stream {readable: false}', Eloquent\Typhax\Type\StreamType)
ok 150 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Writable stream" ('stream {writable: true}', Eloquent\Typhax\Type\StreamType)
ok 151 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Non-writable stream" ('stream {writable: false}', Eloquent\Typhax\Type\StreamType)
ok 152 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Read-write stream" ('stream {readable: true, writable: true}', Eloquent\Typhax\Type\StreamType)
ok 153 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Object type uses relative form when rendered" ('foo', Eloquent\Typhax\Type\ObjectType)
ok 154 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Extension type" (':ext', Eloquent\Typhax\Type\ExtensionType)
ok 155 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Extension type with types" (':ext<integer, array>', Eloquent\Typhax\Type\ExtensionType)
ok 156 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Extension type with attributes" (':ext {foo: \'bar\', quux: \'doom\'}', Eloquent\Typhax\Type\ExtensionType)
ok 157 - Eloquent\Typhax\Renderer\TypeRendererTest::testRenderer with data set "Extension type with types and attributes" (':ext<integer, array> {foo: \'bar\', quux: \'doom\'}', Eloquent\Typhax\Type\ExtensionType)
ok 158 - Eloquent\Typhax\Resolver\ObjectTypeClassNameResolverTest::testResolveObjectTypeName
ok 159 - Eloquent\Typhax\Resolver\ObjectTypeClassNameResolverTest::testLeaveTypesAlone
ok 160 - Eloquent\Typhax\Type\CompositeTypeTest::testTypes
ok 161 - Eloquent\Typhax\Type\ExtensionTypeTest::testExtensionType
ok 162 - Eloquent\Typhax\Type\ObjectTypeTest::testOfType
ok 163 - Eloquent\Typhax\Type\ObjectTypeTest::testOfTypeDefaults
ok 164 - Eloquent\Typhax\Type\ResourceTypeTest::testResourceType
ok 165 - Eloquent\Typhax\Type\StreamTypeTest::testStreamType
ok 166 - Eloquent\Typhax\Type\TraversableTypeTest::testPrimaryType
ok 167 - Eloquent\Typhax\Type\TraversableTypeTest::testKeyType
ok 168 - Eloquent\Typhax\Type\TraversableTypeTest::testValueType
ok 169 - Eloquent\Typhax\Type\TupleTypeTest::testTypes
ok 170 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #0 ('AndType')
ok 171 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #1 ('ArrayType')
ok 172 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #2 ('BooleanType')
ok 173 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #3 ('CallableType')
ok 174 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #4 ('ExtensionType')
ok 175 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #5 ('FloatType')
ok 176 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #6 ('IntegerType')
ok 177 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #7 ('MixedType')
ok 178 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #8 ('NullType')
ok 179 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #9 ('NumericType')
ok 180 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #10 ('ObjectType')
ok 181 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #11 ('OrType')
ok 182 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #12 ('ResourceType')
ok 183 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #13 ('StreamType')
ok 184 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #14 ('StringType')
ok 185 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #15 ('StringableType')
ok 186 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #16 ('TraversableType')
ok 187 - Eloquent\Typhax\Type\VisitorAcceptTypes::testAccept with data set #17 ('TupleType')
1..187
