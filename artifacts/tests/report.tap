TAP version 13
ok 1 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Single type equivalence" (0, Eloquent\Typhax\Type\StringType Object (), Eloquent\Typhax\Type\StringType Object ())
ok 2 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Single type non-equivalence" (-1, Eloquent\Typhax\Type\StringType Object (), Eloquent\Typhax\Type\StringableType Object ())
ok 3 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order with duplicates AND equivalence" (0, Eloquent\Typhax\Type\AndType Object (...), Eloquent\Typhax\Type\AndType Object (...))
ok 4 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order AND non-equivalence 1" (-1, Eloquent\Typhax\Type\AndType Object (...), Eloquent\Typhax\Type\AndType Object (...))
ok 5 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order AND non-equivalence 2" (-1, Eloquent\Typhax\Type\AndType Object (...), Eloquent\Typhax\Type\AndType Object (...))
ok 6 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order AND non-equivalence 3" (1, Eloquent\Typhax\Type\AndType Object (...), Eloquent\Typhax\Type\AndType Object (...))
ok 7 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Out-of order with duplicates OR equivalence" (0, Eloquent\Typhax\Type\OrType Object (...), Eloquent\Typhax\Type\OrType Object (...))
ok 8 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable equivalence" (0, Eloquent\Typhax\Type\TraversableType Object (...), Eloquent\Typhax\Type\TraversableType Object (...))
ok 9 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable primary non equivalence" (1, Eloquent\Typhax\Type\TraversableType Object (...), Eloquent\Typhax\Type\TraversableType Object (...))
ok 10 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable key non equivalence" (1, Eloquent\Typhax\Type\TraversableType Object (...), Eloquent\Typhax\Type\TraversableType Object (...))
ok 11 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable key non equivalence (left omitted)" (-1, Eloquent\Typhax\Type\TraversableType Object (...), Eloquent\Typhax\Type\TraversableType Object (...))
ok 12 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable key non equivalence (right omitted)" (1, Eloquent\Typhax\Type\TraversableType Object (...), Eloquent\Typhax\Type\TraversableType Object (...))
ok 13 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable value non equivalence" (1, Eloquent\Typhax\Type\TraversableType Object (...), Eloquent\Typhax\Type\TraversableType Object (...))
ok 14 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Traversable and non-traversable non equivalence" (-1, Eloquent\Typhax\Type\StringType Object (), Eloquent\Typhax\Type\TraversableType Object (...))
ok 15 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Tuple equivalence" (0, Eloquent\Typhax\Type\TupleType Object (...), Eloquent\Typhax\Type\TupleType Object (...))
ok 16 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Tuple non equivalence" (1, Eloquent\Typhax\Type\TupleType Object (...), Eloquent\Typhax\Type\TupleType Object (...))
ok 17 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Tuple and non-tuple non equivalence" (-1, Eloquent\Typhax\Type\StringType Object (), Eloquent\Typhax\Type\TupleType Object (...))
ok 18 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Composite and non-composite non equivalence" (1, Eloquent\Typhax\Type\StringType Object (), Eloquent\Typhax\Type\OrType Object (...))
ok 19 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Stream type readable non-equivalence" (1, Eloquent\Typhax\Type\StreamType Object (...), Eloquent\Typhax\Type\StreamType Object (...))
ok 20 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Stream type writable non-equivalence" (1, Eloquent\Typhax\Type\StreamType Object (...), Eloquent\Typhax\Type\StreamType Object (...))
ok 21 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Attribute null and non-null non-equivalence 1" (1, Eloquent\Typhax\Type\StreamType Object (...), Eloquent\Typhax\Type\StreamType Object (...))
ok 22 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Attribute null and non-null non-equivalence 2" (-1, Eloquent\Typhax\Type\StreamType Object (...), Eloquent\Typhax\Type\StreamType Object (...))
ok 23 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type equivalence" (0, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 24 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (different type)" (1, Eloquent\Typhax\Type\StreamType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 25 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (different class name)" (-1, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 26 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (different types)" (-1, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 27 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (< attribute values)" (-1, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 28 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (> attribute values)" (1, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 29 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (< attribute keys)" (-1, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 30 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testCompareAndEquivalent with data set "Extension type non-equivalence (> attribute keys)" (1, Eloquent\Typhax\Type\ExtensionType Object (...), Eloquent\Typhax\Type\ExtensionType Object (...))
ok 31 - Eloquent\Typhax\Comparator\TypeEquivalenceComparatorTest::testSort
ok 32 - Eloquent\Typhax\DocumentationTest::testParserUsage
ok 33 - Eloquent\Typhax\DocumentationTest::testComparatorUsage
ok 34 - Eloquent\Typhax\Parser\Exception\UnexpectedTokenExceptionTest::testException
ok 35 - Eloquent\Typhax\Parser\Exception\UnsupportedAttributeExceptionTest::testException
ok 36 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #0 ('array')
ok 37 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #1 ('boolean')
ok 38 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #2 ('callable')
ok 39 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #3 ('float')
ok 40 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #4 ('integer')
ok 41 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #5 ('mixed')
ok 42 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #6 ('object')
ok 43 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #7 ('resource')
ok 44 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #8 ('stream')
ok 45 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #9 ('string')
ok 46 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #10 ('stringable')
ok 47 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #11 ('tuple')
ok 48 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #12 ('bool')
ok 49 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #13 ('callback')
ok 50 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #14 ('double')
ok 51 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #15 ('int')
ok 52 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #16 ('long')
ok 53 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #17 ('number')
ok 54 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #18 ('numeric')
ok 55 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #19 ('real')
ok 56 - Eloquent\Typhax\Parser\TypeLexerTest::testIntrinsicTypesNames with data set #20 ('scalar')
ok 57 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Basic type" (array(Eloquent\Typhax\Parser\TypeToken Object (...)), 'type')
ok 58 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Type with sub-type" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type<subType>')
ok 59 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Type with multiple sub-types" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type<subType, subType, subType>')
ok 60 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Composite OR type" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type|type')
ok 61 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Composite AND type" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type+type')
ok 62 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Treatment of unsupported tokens as strings" (array(Eloquent\Typhax\Parser\TypeToken Object (...)), 'type-type')
ok 63 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Dynamic type with basic attributes and quoted strings" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type{foo: bar, 'baz': "qux"}')
ok 64 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Dynamic type with array attributes" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type{foo: [bar, baz], qux: {d... pop}}')
ok 65 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Nested array" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), '[foo, [bar, baz]]')
ok 66 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Nested hash" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), '{foo: bar, {bar: baz, qux: doom}}')
ok 67 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Treatment of numbers" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), '1, 1.0')
ok 68 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Treatment of booleans and nulls" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'true, TRUE, True, false, null')
ok 69 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Treatment of unsupported tokens containing supported tokens" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), '+= ++ || ?> %> {$ ${ => >= <>...>= <<<')
ok 70 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Treatment of quoted strings containing variables etc." (array(Eloquent\Typhax\Parser\TypeToken Object (...)), '"foo $bar $baz[0] $qux->doom ... \\\""')
ok 71 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Nested sub-types" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type<subType, subType<subSubT...Type>>')
ok 72 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Type with attributes and subtypes" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), 'type<subType, subType>{foo: bar}')
ok 73 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Namespaced type name" (array(Eloquent\Typhax\Parser\TypeToken Object (...)), 'Foo\Bar\Baz')
ok 74 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Basic extension type" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), ':Foo')
ok 75 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Namespaced extension type" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), ':Foo\Bar\Baz')
ok 76 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Namespaced extension type with attributes" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), ':Foo\Bar\Baz{foo: bar}')
ok 77 - Eloquent\Typhax\Parser\TypeLexerTest::testTokens with data set "Namespaced extension type with subtypes and attributes" (array(Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...), Eloquent\Typhax\Parser\TypeToken Object (...)), ':Foo\Bar\Baz<subType, subType...: bar}')
ok 78 - Eloquent\Typhax\Parser\TypeLexerTest::testTokensWithNonZeroOffset
ok 79 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Basic example" (Eloquent\Typhax\Type\ObjectType Object (...), 4, ' foo end ')
ok 80 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Simple traversable 1" (Eloquent\Typhax\Type\TraversableType Object (...), 12, ' foo < bar > end ')
ok 81 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Simple traversable 2" (Eloquent\Typhax\Type\TraversableType Object (...), 18, ' foo < bar , baz > end ')
ok 82 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Nested subtypes" (Eloquent\Typhax\Type\TraversableType Object (...), 33, ' foo < bar , baz < qux , doom > > end ')
ok 83 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Basic composite OR" (Eloquent\Typhax\Type\OrType Object (...), 10, ' foo | bar end ')
ok 84 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Basic composite AND" (Eloquent\Typhax\Type\AndType Object (...), 10, ' foo + bar end ')
ok 85 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Chained composite AND" (Eloquent\Typhax\Type\AndType Object (...), 16, ' foo + bar + baz end ')
ok 86 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Composite precedence" (Eloquent\Typhax\Type\OrType Object (...), 16, ' foo | bar + baz end ')
ok 87 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Composite precedence at end" (Eloquent\Typhax\Type\OrType Object (...), 16, ' foo | bar + baz ')
ok 88 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Composite types nested inside traversable" (Eloquent\Typhax\Type\TraversableType Object (...), 31, ' foo < bar | baz , qux | doom > end ')
ok 89 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Composite types nested inside tuple" (Eloquent\Typhax\Type\TupleType Object (...), 33, ' tuple < bar | baz , qux | doom > end ')
ok 90 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Traversable type nested inside composite" (Eloquent\Typhax\Type\OrType Object (...), 24, ' foo | bar < baz , qux > end ')
ok 91 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Instrinsic types" (Eloquent\Typhax\Type\OrType Object (...), 93, ' boolean | callable | float |...d end ')
ok 92 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Intrinsic aliases" (Eloquent\Typhax\Type\OrType Object (...), 63, ' bool | callback | double | i...r end ')
ok 93 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Array" (Eloquent\Typhax\Type\TraversableType Object (...), 6, ' array end ')
ok 94 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Tuple type" (Eloquent\Typhax\Type\TupleType Object (...), 26, ' tuple < foo , bar , baz > end ')
ok 95 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Resource type" (Eloquent\Typhax\Type\ResourceType Object (...), 9, ' resource end ')
ok 96 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Resource type with ofType attribute" (Eloquent\Typhax\Type\ResourceType Object (...), 26, ' resource { ofType : foo } end ')
ok 97 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Resource type with ofType attribute of reserved type name" (Eloquent\Typhax\Type\ResourceType Object (...), 29, ' resource { ofType : stream } end ')
ok 98 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Stream type" (Eloquent\Typhax\Type\StreamType Object (...), 7, ' stream end ')
ok 99 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Stream type with attributes" (Eloquent\Typhax\Type\StreamType Object (...), 43, ' stream { readable: true, wri...} end ')
ok 100 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Stream type with only writable attribute" (Eloquent\Typhax\Type\StreamType Object (...), 26, ' stream { writable: true } end ')
ok 101 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Don't parse past end of type" (Eloquent\Typhax\Type\ObjectType Object (...), 4, ' foo end ')
ok 102 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Parse extension type" (Eloquent\Typhax\Type\ExtensionType Object (...), 10, ' : Foo\Bar end ')
ok 103 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Parse extension type with attributes" (Eloquent\Typhax\Type\ExtensionType Object (...), 23, ' : Foo\Bar { foo: bar } end ')
ok 104 - Eloquent\Typhax\Parser\TypeParserTest::testParser with data set "Parse extension type with sub types" (Eloquent\Typhax\Type\ExtensionType Object (...), 35, ' : Foo\Bar < integer > { foo:...} end ')
ok 105 - Eloquent\Typhax\Parser\TypeParserTest::testParseOffsetHandling
ok 106 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Empty string" ('Eloquent\Typhax\Parser\Except...eption', 'Unexpected END at offset 0. E...COLON.', '')
ok 107 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Whitespace string" ('Eloquent\Typhax\Parser\Except...eption', 'Unexpected END at offset 0. E...COLON.', ' ')
ok 108 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Empty type list" ('Eloquent\Typhax\Parser\Except...eption', 'Unexpected GREATER_THAN at of...COLON.', ' foo < > ')
ok 109 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Empty attributes" ('Eloquent\Typhax\Parser\Except...eption', 'Unexpected BRACE_CLOSE at off..._OPEN.', ' resource { } ')
ok 110 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Unsupported attributes" ('Eloquent\Typhax\Parser\Except...eption', 'Unsupported attribute at offs...'foo'.', ' resource { foo : bar } ')
ok 111 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Unsupported attributes offset calculation check" ('Eloquent\Typhax\Parser\Except...eption', 'Unsupported attribute at offs...obar'.', ' resource { foobar : baz } ')
ok 112 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Non-traversable as primary in a traversable" ('Eloquent\Typhax\Parser\Except...eption', 'Unexpected LESS_THAN at offse... PIPE.', ' string < foo > ')
ok 113 - Eloquent\Typhax\Parser\TypeParserTest::testParserFailure with data set "Traversable with too many types in type list" ('Eloquent\Typhax\Parser\Except...eption', 'Unexpected COMMA at offset 17..._THAN.', ' foo < bar , baz , qux , doom...lat > ')
ok 114 - Eloquent\Typhax\Parser\TypeParserTest::testParseHash with data set #0 (array('bar', 666, 0.66600000000000004, null, true, false), ' { foo : "bar" , 'baz' : 666 ...lse } ')
ok 115 - Eloquent\Typhax\Parser\TypeParserTest::testParseHash with data set #1 (array(array('baz'), array('doom', array('splat', 'pop'))), ' { foo : { bar : baz } , qux ...] ] } ')
ok 116 - Eloquent\Typhax\Parser\TypeParserTest::testParseHash with data set #2 (array(array(), array()), ' { foo : { } , bar : [ ] } ')
ok 117 - Eloquent\Typhax\Parser\TypeTokenTest::testFromToken with data set "Array token" (Eloquent\Typhax\Parser\TypeToken Object (...), array(310, 'foo'))
ok 118 - Eloquent\Typhax\Parser\TypeTokenTest::testFromToken with data set "Character token" (Eloquent\Typhax\Parser\TypeToken Object (...), '+')
ok 119 - Eloquent\Typhax\Parser\TypeTokenTest::testToken
ok 120 - Eloquent\Typhax\Parser\TypeTokenTest::testAppend
ok 121 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #0 ('BOOLEAN_FALSE', 'false')
ok 122 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #1 ('BOOLEAN_TRUE', 'true')
ok 123 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #2 ('BRACE_CLOSE', '}')
ok 124 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #3 ('BRACE_OPEN', '{')
ok 125 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #4 ('COLON', ':')
ok 126 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #5 ('COMMA', ',')
ok 127 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #6 ('FLOAT', 309)
ok 128 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #7 ('GREATER_THAN', '>')
ok 129 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #8 ('INTEGER', 308)
ok 130 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #9 ('LESS_THAN', '<')
ok 131 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #10 ('NULL', 'null')
ok 132 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #11 ('PIPE', '|')
ok 133 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #12 ('PLUS', '+')
ok 134 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #13 ('SQUARE_BRACKET_CLOSE', ']')
ok 135 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #14 ('SQUARE_BRACKET_OPEN', '[')
ok 136 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #15 ('STRING', 310)
ok 137 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #16 ('STRING_QUOTED', 318)
ok 138 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #17 ('TYPE_NAME', 'typeName')
ok 139 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #18 ('WHITESPACE', 379)
ok 140 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #19 (null, 337)
ok 141 - Eloquent\Typhax\Parser\TypeTokenTest::testNameAndSupported with data set #20 (null, '-')
ok 142 - Eloquent\Typhax\Parser\TypeTokenTest::testNamesByType
ok 143 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Basic types in an OR" ('array|boolean|callable|float|...ngable', Eloquent\Typhax\Type\OrType Object (...))
ok 144 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Objects ofType in an AND" ('Foo+Bar+Baz', Eloquent\Typhax\Type\AndType Object (...))
ok 145 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable type" ('array<integer,string>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 146 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable type with omitted key" ('array<string>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 147 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Array type with omitted key and mixed value" ('array', Eloquent\Typhax\Type\TraversableType Object (...))
ok 148 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable object type with omitted key and mixed value" ('Foo<mixed>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 149 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable mixed type with omitted key and mixed value" ('mixed<mixed>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 150 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable type with mixed key" ('array<mixed,string>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 151 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Array type with mixed key and mixed value" ('array<mixed,mixed>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 152 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable object type with mixed key and value" ('Foo<mixed,mixed>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 153 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Traversable mixed type with mixed key and value" ('mixed<mixed,mixed>', Eloquent\Typhax\Type\TraversableType Object (...))
ok 154 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Tuple type" ('tuple<boolean,callable,float>', Eloquent\Typhax\Type\TupleType Object (...))
ok 155 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Resource ofType" ('resource{ofType:'foo'}', Eloquent\Typhax\Type\ResourceType Object (...))
ok 156 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Readable stream" ('stream{readable:true}', Eloquent\Typhax\Type\StreamType Object (...))
ok 157 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Non-readable stream" ('stream{readable:false}', Eloquent\Typhax\Type\StreamType Object (...))
ok 158 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Writable stream" ('stream{writable:true}', Eloquent\Typhax\Type\StreamType Object (...))
ok 159 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Non-writable stream" ('stream{writable:false}', Eloquent\Typhax\Type\StreamType Object (...))
ok 160 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Read-write stream" ('stream{readable:true,writable:true}', Eloquent\Typhax\Type\StreamType Object (...))
ok 161 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Absolute class name" ('\foo', Eloquent\Typhax\Type\ObjectType Object (...))
ok 162 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Extension type" (':\ext', Eloquent\Typhax\Type\ExtensionType Object (...))
ok 163 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Extension type with types" (':\ext<integer,array>', Eloquent\Typhax\Type\ExtensionType Object (...))
ok 164 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Extension type with attributes" (':\ext{foo:'bar',quux:'doom'}', Eloquent\Typhax\Type\ExtensionType Object (...))
ok 165 - Eloquent\Typhax\Renderer\CondensedTypeRendererTest::testRender with data set "Extension type with types and attributes" (':\ext<integer,array>{foo:'bar...doom'}', Eloquent\Typhax\Type\ExtensionType Object (...))
ok 166 - Eloquent\Typhax\Type\AndTypeTest::testTypes
ok 167 - Eloquent\Typhax\Type\ExtensionTypeTest::testExtensionType
ok 168 - Eloquent\Typhax\Type\ObjectTypeTest::testOfType
ok 169 - Eloquent\Typhax\Type\ObjectTypeTest::testOfTypeDefaults
ok 170 - Eloquent\Typhax\Type\OrTypeTest::testTypes
ok 171 - Eloquent\Typhax\Type\ResourceTypeTest::testResourceType
ok 172 - Eloquent\Typhax\Type\StreamTypeTest::testStreamType
ok 173 - Eloquent\Typhax\Type\TraversableTypeTest::testPrimaryType
ok 174 - Eloquent\Typhax\Type\TraversableTypeTest::testKeyType
ok 175 - Eloquent\Typhax\Type\TraversableTypeTest::testNullKeyType
ok 176 - Eloquent\Typhax\Type\TraversableTypeTest::testValueType
ok 177 - Eloquent\Typhax\Type\TupleTypeTest::testTypes
ok 178 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #0 ('AndType')
ok 179 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #1 ('ArrayType')
ok 180 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #2 ('BooleanType')
ok 181 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #3 ('CallableType')
ok 182 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #4 ('ExtensionType')
ok 183 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #5 ('FloatType')
ok 184 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #6 ('IntegerType')
ok 185 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #7 ('MixedType')
ok 186 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #8 ('NullType')
ok 187 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #9 ('NumericType')
ok 188 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #10 ('ObjectType')
ok 189 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #11 ('OrType')
ok 190 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #12 ('ResourceType')
ok 191 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #13 ('StreamType')
ok 192 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #14 ('StringType')
ok 193 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #15 ('StringableType')
ok 194 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #16 ('TraversableType')
ok 195 - Eloquent\Typhax\Type\VisitorAcceptTest::testAccept with data set #17 ('TupleType')
1..195
